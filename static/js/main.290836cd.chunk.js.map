{"version":3,"sources":["api.js","components/User.js","components/TodoItem.js","components/SortButtons.js","components/TodoList.js","App.js","index.js"],"names":["loadData","_callee2","url","regenerator_default","a","wrap","_context2","prev","next","abrupt","fetch","then","response","json","stop","getTodosWithUsers","_ref","Object","asyncToGenerator","mark","_callee","todos","users","_context","sent","map","todo","_objectSpread","user","find","id","userId","apply","this","arguments","User","react_default","createElement","className","name","TodoItem","completed","title","components_User","SortButtons","changeSortMethod","Fragment","type","onClick","TodoList","sortMethod","todoItems","toConsumableArray","sort","b","localeCompare","components_SortButtons","components_TodoItem","key","App","state","isLoading","loadTodos","_this","setState","_this$state","length","components_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.290836cd.chunk.js","sourcesContent":["const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nasync function loadData(url) {\n  return fetch(url).then(response => response.json());\n}\n\nconst getTodosWithUsers = async () => {\n  const todos = await loadData(TODOS_URL);\n  const users = await loadData(USERS_URL);\n\n  return todos.map(todo => (\n    {\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }\n  ));\n};\n\nexport default getTodosWithUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  return (\n    <td className=\"cell\">\n      {user.name}\n    </td>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nfunction TodoItem({ todo }) {\n  return (\n    <tr className={todo.completed ? 'completed' : 'notCompleted'}>\n      <td className=\"cell\">\n        {todo.id}\n      </td>\n      <td className=\"cell\">\n        {todo.title}\n      </td>\n      <td className=\"cell\">\n        {todo.completed ? 'Done' : 'In Progress'}\n      </td>\n      <User user={todo.user} />\n    </tr>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SortButtons = ({ changeSortMethod }) => (\n  <>\n    <button\n      type=\"button\"\n      onClick={() => changeSortMethod('Sort by todo Id')}\n    >\n      Sort by todo Id\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => changeSortMethod('Sort by todo title')}\n    >\n      Sort by todo title\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => changeSortMethod('Show undone todos first')}\n    >\n      Show undone todos first\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => changeSortMethod('Sort by executant name')}\n    >\n      Sort by executant name\n    </button>\n  </>\n);\n\nSortButtons.propTypes = {\n  changeSortMethod: PropTypes.func.isRequired,\n};\n\nexport default SortButtons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\nimport SortButtons from './SortButtons';\n\nfunction TodoList({ todos, sortMethod, changeSortMethod }) {\n  let todoItems = [];\n\n  switch (sortMethod) {\n    case 'Sort by todo Id':\n      todoItems = [...todos];\n      break;\n\n    case 'Sort by todo title':\n      todoItems = [...todos]\n        .sort((a, b) => (\n          a.title.localeCompare(b.title)\n        ));\n      break;\n\n    case 'Show undone todos first':\n      todoItems = [...todos]\n        .sort(a => (\n          a.completed ? 1 : -1\n        ));\n      break;\n\n    case 'Sort by executant name':\n      todoItems = [...todos]\n        .sort((a, b) => (\n          a.user.name.localeCompare(b.user.name)\n        ));\n      break;\n\n    default:\n  }\n\n  return (\n    <>\n      <SortButtons changeSortMethod={changeSortMethod} />\n      <table className=\"table\">\n        <thead className=\"thead\">\n          <tr>\n            <th className=\"cell\">\n              #\n            </th>\n            <th className=\"cell\">\n              Todo Item\n            </th>\n            <th className=\"cell\">\n              Status\n            </th>\n            <th className=\"cell\">\n              Assigned to\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {todoItems.map(todo => (\n            <TodoItem todo={todo} key={todo.id} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortMethod: PropTypes.string.isRequired,\n  changeSortMethod: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n\nimport getTodosWithUsers from './api';\nimport TodoList from './components/TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    isLoading: false,\n    sortMethod: 'Sort by todo Id',\n  }\n\n  loadTodos = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    getTodosWithUsers()\n      .then((todos) => {\n        this.setState({ todos, isLoading: false });\n      });\n  }\n\n  changeSortMethod = (sortMethod) => {\n    if (sortMethod !== this.state.sortMethod) {\n      this.setState({\n        sortMethod,\n      });\n    }\n  }\n\n  render() {\n    const { todos, isLoading, sortMethod } = this.state;\n\n    if (isLoading) {\n      return <button type=\"button\">Loading...</button>;\n    }\n\n    if (todos.length === 0) {\n      return (\n        <button type=\"button\" onClick={this.loadTodos}>\n          Load\n        </button>\n      );\n    }\n\n    return (\n      <TodoList\n        todos={todos}\n        sortMethod={sortMethod}\n        changeSortMethod={this.changeSortMethod}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}